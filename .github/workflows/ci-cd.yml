name: Deploy Portfolio

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install --save-dev \
            html-validate \
            stylelint \
            stylelint-config-standard \
            eslint \
            eslint-config-standard

      - name: Fix HTML formatting
        run: |
          find . -type f -name "*.html" -exec sed -i \
            -e 's/[[:space:]]*$//' \
            -e 's/\(<link[^>]*\)\/>/\1>/g' \
            -e 's/\(<meta[^>]*\)\/>/\1>/g' \
            -e 's/\(<img[^>]*\)\/>/\1>/g' \
            {} \;

      - name: Validate HTML
        run: npx html-validate "**/*.html"

      - name: Validate CSS
        run: |
          if [ -d "assets/css" ]; then
            echo '{"extends":"stylelint-config-standard","rules":{"indentation":2}}' > .stylelintrc.json
            npx stylelint "assets/css/**/*.css"
          else
            echo "⚠️ No CSS directory found - skipping CSS validation"
          fi

      - name: Validate JavaScript
        run: |
          if [ -d "assets/js" ]; then
            npx eslint "assets/js/**/*.js"
          else
            echo "⚠️ No JS directory found - skipping JS validation"
          fi

  deploy:
    name: Deploy to Netlify
    needs: validate
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: ./
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
          deploy-message: "Deploy from GitHub Actions"
